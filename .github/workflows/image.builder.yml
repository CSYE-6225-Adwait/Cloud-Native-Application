name: Image Builder
on:
  workflow_dispatch:
  push:
    branches: ["main"] 

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASENAME: ${{ secrets.DB_NAME }}
      DATABASEUSERNAME: ${{ secrets.DB_USERNAME }}
      DATABASEPASSWORD: ${{ secrets.DB_PASSWORD }}
      DATABASEURL: ${{ secrets.DB_URL }}
      ENVRUN: ${{ secrets.ENV_RUN }}

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20
        
    - name: Start sql services
      run: sudo systemctl start mysql.service 
    - name: Install dependencies    
      run: npm ci
    - name: Running tests
      run: npm test

    - name: Zip webapp 
      run: |
        zip -r webapp.zip ./
        ls 

    - name: Install and Configure gcloud CLI
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_KEY }}'
        export_default_credentials: true

    - name: Setup packer
      uses: hashicorp/setup-packer@main
      id: setup
      with:
        version: "1.10.1"

    - name: Packer init
      run: packer init .

    - name: Packer Format
      run: packer fmt -check .

    - name: Packer Validate
      run: packer validate gcp.pkr.hcl

    - name: Packer Builder
      run: packer build gcp.pkr.hcl
    
    - name: Get Image id
      run: |
        IMAGE_ID=$(jq -r '.builds[-1].artifact_id' packer-manifest.json | cut -d ":" -f2)
        echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
        echo "Built GCP image ID is $IMAGE_ID"

    - name: Generate version number
      run: echo "VERSION=$(date +%s)" >> $GITHUB_ENV


    - name: New Instance Template
      run: |
        gcloud compute instance-templates create "instance-template-${{ env.VERSION }}" \
        --project="csye6225-414123" \
        --image="${{ env.IMAGE_ID }}" \
        --machine-type="e2-medium" \
        --region="us-east1" \
        --tags="webapp" \
        --network="vpc-network1" \
        --subnet="webapp" \
        --network-tier="PREMIUM" \
        --boot-disk-size=100GB \
        --boot-disk-type="pd-balanced" \
        --instance-template-region=us-east1 \
        --boot-disk-kms-key=projects/csye6225-414123/locations/us-east1/keyRings/kms-keyring-a5195a46/cryptoKeys/vm-key \
        --boot-disk-device-name=webapp-instance \
        --maintenance-policy="MIGRATE" \
        --service-account="webapp-service-account@csye6225-414123.iam.gserviceaccount.com" \
        --scopes=logging-write,monitoring-write,cloud-platform,pubsub \
        --metadata-from-file startup-script=<(cat <<EOF
        sudo touch /opt/app/.env
        echo "DATABASEUSERNAME=webapp" >> /opt/app/.env
        echo "DATABASEURL=10.150.0.2" >> /opt/app/.env
        echo "DATABASEPASSWORD=UtLGHhb9Z5CSDiu5" >> /opt/app/.env
        echo "DATABASENAME=webapp" >> /opt/app/.env
        echo "ENVRUN=PRODUCTION" >> /opt/app/.env
        EOF
        )

    - name: Update Managed Instance Group
      run: |
        NEW_INSTANCE_TEMPLATE="instance-template-${{ env.VERSION }}"
        INSTANCE_GROUP_NAME="webapp-instance-region-group-manager"
        INSTANCE_GROUP_REGION="us-east1"
        BASE_INSTANCE_NAME="webapp-instance"
        NAMED_PORT_NAME="http"
        NAMED_PORT_PORT="3000"
        HEALTH_CHECK_NAME="compute-health-check"
        HEALTH_CHECK_INTERVAL="5"
        HEALTH_CHECK_TIMEOUT="5"
        HEALTH_CHECK_HEALTHY_THRESHOLD="2"
        HEALTH_CHECK_UNHEALTHY_THRESHOLD="10"
        HEALTH_CHECK_PORT="3000"
        HEALTH_CHECK_PATH="/healthz"

        gcloud compute instance-groups managed set-instance-template "$INSTANCE_GROUP_NAME" \
        --instance-template="$NEW_INSTANCE_TEMPLATE" \
        --region="$INSTANCE_GROUP_REGION" \
        --base-instance-name="$BASE_INSTANCE_NAME" \
        --update-strategy="NONE"

        gcloud compute instance-groups managed set-named-ports "$INSTANCE_GROUP_NAME" \
        --named-ports="$NAMED_PORT_NAME:$NAMED_PORT_PORT" \
        --region="$INSTANCE_GROUP_REGION"

        gcloud compute instance-groups managed update "$INSTANCE_GROUP_NAME" \
        --region="$INSTANCE_GROUP_REGION" \
        --health-check="https://www.googleapis.com/compute/v1/projects/${{ env.PROJECT_ID }}/global/healthChecks/$HEALTH_CHECK_NAME" \
        --initial-delay="300" \
        --health-check-interval="$HEALTH_CHECK_INTERVAL" \
        --health-check-timeout="$HEALTH_CHECK_TIMEOUT" \
        --health-check-healthy-threshold="$HEALTH_CHECK_HEALTHY_THRESHOLD" \
        --health-check-unhealthy-threshold="$HEALTH_CHECK_UNHEALTHY_THRESHOLD" \
        --health-check-port="$HEALTH_CHECK_PORT" \
        --health-check-path="$HEALTH_CHECK_PATH"
